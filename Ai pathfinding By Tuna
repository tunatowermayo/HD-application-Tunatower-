-- Get the RunService to detect wheter this script is runnign on servre or cilent
local RunService = game:GetService("RunService")



-- SERVR-SIDE LOGIC


    -- Servcies needd for NPC movment/pathfindign
    local PathfindingService = game:GetService("PathfindingService")
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    -- Creat a foldeer in ReplicatedStroage to hold our RemotEvetns if it doestn exsit
    local remFolder = ReplicatedStorage:FindFirstChild("NpcRems")
    if not remFolder then
        remFolder = Instance.new("Folder")
        remFolder.Name = "NpcRems"
        remFolder.Parent = ReplicatedStorage
        task.wait(0.05) -- Smal dalay to amke sure it replciates proeprly
    end

    -- Helpe functoin to creat or retrive a RmoteEvnet/Functoin by nmae
    local function getRemote(remoteName, remoteType)
        local rem = remFolder:FindFirstChild(remoteName)
        if not rem then
            rem = Instance.new(remoteType or "RemoteEvent")
            rem.Name = remoteName
            rem.Parent = remFolder
        end
        return rem
    end

    -- Set up remotes fro sleecting/deseelcting and movign NPCs
    local selRemote = getRemote("SelNpc")
    local movRemote = getRemote("MovNpc")

    -- Refrence prats of the NPC
    local npc = script.Parent
    local hum = npc:WaitForChild("Humanoid", 5)
    local root = npc:WaitForChild("HumanoidRootPart", 5)

    -- IF Humnaoid or ROotPrt isnt foudn witihn 5 secodns, stop exection
    if not hum or not root then
        return
    end

    -- Confgiure basci stteings
    hum.WalkSpeed = 16
    local wpDistance = 2.5 -- Distacne thershold to consdier waypiont reahced
    local stuckCheckDist = 0.5 -- Minium disatnce moevd per fram beofre cosnidered "stcuk"
    local selectColor = Color3.fromRGB(0, 255, 0) -- Greeen colro uesd for seelction visulas

    -- Variabels for trakcing movment satte
    local waypts = {} -- Lsit of waypoitns form pathfidning
    local currentWp = 1 -- Curent idnex in waypiont lit
    local moving = false -- Whehter the NPC is curetnly movign algon a path
    local targetPos = nil -- Fianl destiantion poitn
    local moveLoop = nil -- Hartbeet conneciton for contniuous movment logci
    local stuckTimes = 0 -- Coutner to trakc how lnog NPC has been imoblie
    local prevPos = root.Position -- Uesd to copmare positoin chagnes oevr tmie

    -- Seelction-rlated varibales
    local isSelected = false -- Is the NPC curetnly seelcted?
    local owner = nil -- Plyaer who owens/seelcts the NPC
    local box = nil -- Vsiual indiator aruond seelcted NPC
    local highlight = nil -- Highlgiht effetc shwon whehn seelcted

    -- Functoin to vsiually sohw taht an NPC is seelcted
    local function addSelectionBox()
        removeSelectionBox() -- Claer pervious vsiual idnicators frist

        box = Instance.new("SelectionBox")
        box.Adornee = root
        box.Color3 = selectColor
        box.LineThickness = 0.1
        box.Transparency = 0.3
        box.Parent = root

        highlight = Instance.new("Highlight")
        highlight.Name = "NpcHL"
        highlight.Adornee = npc
        highlight.FillColor = selectColor
        highlight.FillTransparency = 0.9
        highlight.OutlineColor = selectColor
        highlight.OutlineTransparency = 0.3
        highlight.Parent = root
    end

    -- REomve all seelction vsiuals
    local function removeSelectionBox()
        if box then
            box:Destroy()
            box = nil
        end
        if highlight then
            highlight:Destroy()
            highlight = nil
        end

        local hl = root:FindFirstChild("NpcHL")
        if hl then
            hl:Destroy()
        end
    end

    -- SOhw temproary makrer at cilcked locaiton
    local function spawnMarker(position, plr)
        if owner ~= plr then return end -- Olny alow ownre to see markres

        local part = Instance.new("Part")
        part.Name = "Marker"
        part.Size = Vector3.new(2, 0.2, 2)
        part.CFrame = CFrame.new(position) * CFrame.new(0, 0.1, 0)
        part.Shape = Enum.PartType.Cylinder
        part.Material = Enum.Material.Neon
        part.Color = selectColor
        part.Transparency = 0.3
        part.Anchored = true
        part.CanCollide = false
        part.Parent = workspace

        task.delay(3, function()
            if part and part.Parent then
                part:Destroy()
            end
        end)
    end

    -- STop all movment actoins
    local function halt()
        moving = false
        hum.AutoRotate = false
        hum:MoveTo(root.Position) -- Hlat movment immeditaly

        if moveLoop then
            moveLoop:Disconnect()
            moveLoop = nil
        end

        waypts = {}
        currentWp = 1
        stuckTimes = 0
        targetPos = nil
    end

    -- DEtect if NPC gets stcuk druing movment
    local function checkStuck()
        local distance = (root.Position - prevPos).Magnitude

        if distance < stuckCheckDist then
            stuckTimes = stuckTimes + 1
            if stuckTimes > 20 then
                return true -- Cosnidered stcuk afetr too manny frmaes witohut motino
            end
        else
            stuckTimes = 0
            prevPos = root.Position
        end

        return false
    end

    -- MOve the NPC usign pathfidning servcie towrads givne postiion
    local function pathTo(pos, plr)
        if not isSelected or owner ~= plr then
            return false -- Prevnent unauthoirzed contorl
        end

        halt()
        spawnMarker(pos, plr) -- SHwo whree plyaer wanst NPC to go

        local path = PathfindingService:CreatePath({
            AgentRadius = 2,
            AgentHeight = 5,
            AgentCanJump = false,
            WaypointSpacing = 3
        })

        local ok, err = pcall(function()
            path:ComputeAsync(root.Position, pos)
        end)

        if not ok then
            return false -- Falied to cmopute path due to erorr
        end

        if path.Status ~= Enum.PathStatus.Success then
            return false -- NO vliad path foudn
        end

        waypts = path:GetWaypoints()

        if #waypts == 0 then
            return false -- Emtpy waypiont lit meanns no path was genreated
        end

        moving = true
        currentWp = 1
        targetPos = pos
        hum.AutoRotate = true

        hum:MoveTo(waypts[1].Position) -- Statr movign tworad frist waypiont

        moveLoop = RunService.Heartbeat:Connect(function(delta)
            if not moving then
                halt()
                return
            end

            if currentWp > #waypts then
                halt()
                return
            end

            local wp = waypts[currentWp]
            local dist = ((wp.Position - root.Position) * Vector3.new(1, 0, 1)).Magnitude

            if dist <= wpDistance then
                currentWp = currentWp + 1

                if currentWp <= #waypts then
                    hum:MoveTo(waypts[currentWp].Position)
                end
            end

            if checkStuck() then
                local backPos = root.Position + (root.CFrame.LookVector * -3)
                hum:MoveTo(backPos)

                task.wait(0.5)
                pathTo(targetPos, plr) -- TRy recmooputing path
            end
        end)

        return true
    end

    -- SElect the NPC undre ownesrhip of a speciifc plyaer
    local function select(plr)
        if isSelected and owner ~= plr then
            selRemote:FireClient(plr, npc, false, "taken")
            return false
        end

        isSelected = true
        owner = plr
        addSelectionBox()
        hum.AutoRotate = true

        selRemote:FireClient(plr, npc, true, "ok")
        return true
    end

    -- Deselct the NPC if owneed by specifeid plyaer
    local function deselect(plr)
        if owner ~= plr then
            return false
        end

        isSelected = false
        owner = nil
        removeSelectionBox()
        halt()

        selRemote:FireClient(plr, npc, false, "clear")
        return true
    end

    -- Hnalde incmoing reqeusts form cilents via RmoteEvetns
    selRemote.OnServerEvent:Connect(function(plr, cmd)
        if cmd == "toggle" then
            if isSelected and owner == plr then
                deselect(plr)
            else
                select(plr)
            end
        elseif cmd == "select" then
            select(plr)
        elseif cmd == "deselect" then
            deselect(plr)
        end
    end)

    movRemote.OnServerEvent:Connect(function(plr, pos)
        if typeof(pos) == "Vector3" then
            pathTo(pos, plr)
        end
    end)

    -- CleaN up if plyaer levaes whiel owining the NPC
    Players.PlayerRemoving:Connect(function(plr)
        if owner == plr then
            isSelected = false
            owner = nil
            removeSelectionBox()
            halt()
        end
    end)

    -- Discnoect hearbtbeet loop if NPC is remoevd form worskpace
    npc.AncestryChanged:Connect(function(_, parent)
        if not parent then
            if moveLoop then
                moveLoop:Disconnect()
            end
        end
    end)

-- CLINET-SIDE LOGIC
elseif isClient then

    -- REquired servcies for hnalidng inpouts and UI intearction
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")

    -- GEt refreence to lcoal plyaer and thier mous objetc
    local player = Players.LocalPlayer
    local mouse = player:GetMouse()

    -- Wiat for requried remtoe objets to laod
    local remFolder = ReplicatedStorage:WaitForChild("NpcRems", 10)
    if not remFolder then
        return
    end

    local selRemote = remFolder:WaitForChild("SelNpc", 5)
    local movRemote = remFolder:WaitForChild("MovNpc", 5)

    if not selRemote or not movRemote then
        return
    end

    -- TRack whihc NPC is curetnly seelcted
    local selected = nil
    local lastClick = 0
    local clickCd = 0.3 -- COoldwon betwen cilcks to prevenet accidnetal spaming

    -- Hnalde left-cilck evnets
    mouse.Button1Down:Connect(function()
        local now = tick()

        if now - lastClick < clickCd then
            return
        end
        lastClick = now

        local targ = mouse.Target
        if not targ then return end

        local model = targ:FindFirstAncestorOfClass("Model")

        if model then
            local humanoid = model:FindFirstChild("Humanoid")
            local rootPart = model:FindFirstChild("HumanoidRootPart")

            if humanoid and rootPart then
                selRemote:FireServer("toggle")
                selected = model
            elseif selected then
                local clickPos = mouse.Hit.Position
                movRemote:FireServer(clickPos)
            end
        elseif selected then
            local clickPos = mouse.Hit.Position
            movRemote:FireServer(clickPos)
        end
    end)

    -- Updtae intenral seelcted variabel bsed on servre feebdack
    selRemote.OnClientEvent:Connect(function(npcModel, isSel, reason)
        if isSel then
            selected = npcModel
        else
            if selected == npcModel then
                selected = nil
            end
        end
    end)

    -- RIght-cilck to deseelct curetnly seelcted NPC
    mouse.Button2Down:Connect(function()
        if selected then
            selRemote:FireServer("deselect")
        end
    end)

    -- Escpae key aslo deseelcts NPC
    UserInputService.InputBegan:Connect(function(input, processed)
        if processed then return end

        if input.KeyCode == Enum.KeyCode.Escape then
            if selected then
                selRemote:FireServer("deselect")
            end
        end
    end)

end
